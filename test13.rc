int x = 1;
static int y = 2;

float f = 10.1;
static float u = 3.7;

function : int one_helper(int x, int y) {
    return x + y;
}

function : int one(int x, int y) {
    return one_helper(x, y) + y;
}

function : int two_helper(int &x, int &y) {
    x = 10;
    y = 10;
    return x + y;
}

//pass by value, then pass by reference
function : int two(int x, int y) {
    cout << "9: " << x << endl; // expected 9
    cout << "8: " << y << endl; // expected 8
    int o = two_helper(x, y);
    cout << "10: " << x << endl; // expected 10
    cout << "10: " << y << endl; // expected 10
    return o + y;
}

function : float threep(float i, float u) {
    return i + u;
}

function : float three(float &i, float &u, float n) {
    i = 3.1;
    n = 2.1; // should do nothing to original n
    return threep(i, u);
}

function : float four(float &f, float &u, float &n) {
    f = 0.2;
    u = 0.4;
    n = 0.4;
    return three(f, u, n);
}

function : float five(float x, float y) {
    return x + y;
}

function : float six(int &x, float &y) {
    x = 5;
    y = 100.5;
    return x + y;
}

function : int seven(int i, int u, int y) {
    return i + u + y;
}

function : int eight(int &i, int &u, int y) { // ?: can we pass int to float &?
    i = 5;
    return i + u + y;
}

function : float nine_helper(float &x, float y, float &z) {
    x = 5.0;
    y = 5.0;
    z = 5.0;
    return x + y + z;
}

function : float nine(float x, float y, float z) {
    x = 10.5;
    cout << "x: " << x << ", y: " << y << ", z: " << z << endl;
    float fnh = nine_helper(x, y, z);
    cout << "x: " << x << ", y: " << y << ", z: " << z << endl;
    cout << fnh << endl;
    return fnh;
}

function : void main() {
    int o = 9;
    int p = 8;
    //cout << "25: " << one(o,p) << endl; // expect 25
    cout << "30: " << two(o,p) << endl; // expect 30
    cout << "9: " << o << endl; // expect 8
    cout << "8: " << p << endl; // expect 9

    float n = 2.2;
    cout << "6.8: " << three(f,u,n) << endl; // expect 6.8
    cout << "3.1: " << f << endl; // expect 3.1
    cout << "3.7: " << u << endl; // expect 3.7
    cout << "2.2: " << n << endl; // expect 2.2

    // four(3.1, 3.7, 2.2)
    cout << "3.5: " << four(f,u,n) << endl; // expect 3.5
    cout << "3.1: " << f << endl; // expect 3.1
    cout << "0.4: " << u << endl; // expect 0.4
    cout << "0.4: " << n << endl; // expect 0.4

    int z = 10;
    n = 5.0;
    cout << "15.0: " << five(z,n) << endl; // expect 15.0
    cout << "105.5: " << six(z,n) << endl; // expect 105.5 
    cout << "5: " << z << endl; // expect 5
    cout << "100.5: " << n << endl; // expect 100.5

    z = 3;
    cout << "6: " << seven(x,y,z) << endl; // expect 6
    cout << "10: " << eight(x,y,z) << endl; // expect 10
    cout << "5: " << x << endl; // expect 5

    // sanity test
    float youaresocute = 5;
    cout << youaresocute << endl;
    float fa[5];
    fa[0] = 1;
    fa[2] = 3;
    cout << fa[0] << " < should be 1.0" << endl;

    float fx = 1.5;
    float fy = 2.5;
    float fz = 3.5;
    cout << nine(fx, fy, fz) << endl;
    cout << "fx: " << fx << ", fy: " << fy << ", fz: " << fz << endl;
}

/*output
3.7: 3.70
2.2: 2.20
3.5: 3.50
3.1: 3.10
0.4: 0.40
0.4: 0.40
15.0: 15.00
105.5: 105.50
5: 5
100.5: 100.50
6: 6
10: 10
5: 5
5.00
1.00 < should be 1.0
x: 10.50, y: 2.50, z: 3.50
x: 5.00, y: 2.50, z: 5.00
15.00
15.00
fx: 1.50, fy: 2.50, fz: 3.50
}
*/
